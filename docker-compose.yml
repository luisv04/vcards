version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: vcards_postgres
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - vcards_network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: vcards_backend
    environment:
      - NODE_ENV=production
      - PORT=${BACKEND_PORT}
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - JWT_SECRET=${JWT_SECRET}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - ADMIN_EMAIL=${ADMIN_EMAIL}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - FRONTEND_URL=${FRONTEND_URL}
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    depends_on:
      - postgres
    volumes:
      - ./uploads:/app/uploads
      - ./qr-codes:/app/qr-codes
    networks:
      - vcards_network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: vcards_frontend
    environment:
      - API_URL=${API_URL}
    ports:
      - "${FRONTEND_PORT}:80"
    depends_on:
      - backend
    networks:
      - vcards_network

volumes:
  postgres_data:

networks:
  vcards_network:
    driver: bridge 